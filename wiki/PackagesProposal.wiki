#summary Tunnelblick .tblk Packages Proposal
#labels Featured,Phase-Requirements

====THIS IS A PROPOSAL. IT HAS NOT BEEN IMPLEMENTED AND IT IS PRELIMINARY AND SUBJECT TO CHANGE.===
====PLEASE DISCUSS THIS PROPOSAL IN [ THIS THREAD] IN THE [http://groups.google.com/group/tunnelblick-discuss TUNNELBLICK DISCUSSION GROUP]====

<wiki:toc max_depth="2" />

==Introduction==

This proposal arose from a [http://groups.google.com/group/tunnelblick-discuss/browse_thread/thread/6920e90bb46229f3 recent thread] on the Tunnelblick Discussion Group. Please discuss this proposal in [http://groups.google.com/group/tunnelblick-discuss/t/45f208097827043f this thread].

VPN configuration information may be specified in a Tunnelblick package:
  * Packages provide a convenient way to distribute VPN configurations separate from the Tunnelblick application itself.
  * Packages contain identification and version information to assist in version control.
  * Packages may be automatically installed when Tunnelblick is installed by including them in the Tunnelblick disk image.
  * Package installation requires a computer administrator username/password (as does Tunnelblick installation).

Tunnelblick packages must be "installed" before they can be used. Installation can be done manually by double-clicking a package or dragging it to a Tunnelblick icon in Finder. (A package _cannot_ be dragged to the Tunnelblick icon near the Spotlight icon in the Status Bar.) Installation can also be done automatically when Tunnelblick is installed from a disk image (see [Automatic_Installation Automatic Installation]).

==Installation==
Installation consists primarily of copying the package to ~/Library/Application Support/Tunnelblick/Configurations and setting ownership and permissions on the package. A package may be installed by double-clicking it or dragging it to and dropping it on a Tunnelblick alias. (It cannot be installed by dropping it on the Tunnelblick icon in the Status Bar.)

==Automatic Installation==
A package's Info.plist may contain a string with a key of "dmgInstallOption". The string may be "Force", "Yes", or "Ask".

When Tunnelblick is installed by double-clicking Tunnelblick.app in a disk image, all packages on the disk image are examined. If a package's Info.plist does not contain a "dmgInstallOption" or if the value of "dmgInstallOption" is "Force" or "Yes", the package will be installed without notifying the user.  if the value of "dmgInstallOption" is "Ask", the package will be installed after notifying the user and getting the user's permission.

==Display Name==
A package's filename (without the ".tblk") is the "display name" used by Tunnelblick to identify the configuration to the user. If a 'TBDisplayName' key is present in the package's Info.plist, the string value corresponding to that key will be used instead.

==Package Format==
Tunnelblick packages are folders with an extension of ".tblk". (OS X will treat the folder as a package because of the extension.) The contents of a Tunnelblick package should be arranged as follows:

{{{
    sample.tblk/
        Contents/
            Info.plist
            Resources/
                Exactly one .conf or .ovpn file containing OpenVPN configuration information
                (Optional) files and/or folders containing any number of keys, certificates, and/or shell scripts
}}}
Note that the configuration file must reside at the top level of /Resources. The name of the .conf or .ovpn file does not matter and is not used by Tunnelblick.

The name of the _package_ (without ".tblk") is used as the name of the configuration unless a 'TBDisplayName' entry exists in Info.plist (see below).

==Info.plist==
Info.plist is required. It must be an OS X property list file, and must contain the following keys:
||Key||Description||Examples||
||TBPackageVersion||The string "1" (without the quotation marks)||1||
||CFBundleIdentifier||A string that uniquely identifies the configuration and the individual or organization distributing the package||com.abc.tbconfigs.config27A||
||CFBundleVersion ||A string representation of a floating-point number representing the version number that is used to determine later/earlier versions of the package||1.6||
||CFBundleShortVersionString||A string to display as the version (in Get Info, for example)||1.6||

A package's Info.plist may also contain a 'TBDisplayName' key with a string value which will be used as the display name of the configuration. If no 'TBDisplayName' is present, the name of the Tunnelblick package (without the .tblk) will be used as the display name of the configuration.

A package's Info.plist may also contain entries (strings and booleans) with keys that start with "TB-Preference". The strings are preferences for the configuration. If not already present (with any value), each entry will be copied to the user's regular preferences each time Tunnelblick loads the package (when Tunnelblick is launched or the package is added to the Configurations folder). When the entries are copied, "TB-Preference" is replaced with the display name of the package (not including the .tblk extension). 

==Version Control==
On installation (manual or automatic) of a package, if a package with an identical CFBundleIdentifier is already installed, the user will be be asked to confirm the wish to upgrade, downgrade, or reinstall the package unless "dmgInstallOption" is "Force", in which case the package will automatically replace the existing package. In an upgrade/downgrade/reinstall, the copy of the package placed in ~/Library/Application Support/Tunnelblick/Configurations is renamed to match the existing package's filename if it is different, so that it replaces the existing package.

==Name Conflicts During Installation==
If the display name of a package is the same as the name of an .ovpn or .conf file (without the .extension) from either Deploy or ~/Library/Application Support/Tunnelblick/Configurations:
  * If the display name came from the package filename, the user will be asked to rename the package or cancel the installation;
  * If the display name came from a 'TBDisplayName' entry in the package's Info.plist, the installation will be cancelled. (The user must rename of the .ovpn or .conf file and should rename all preferences for that configuration to allow installation to proceed.)

==Name Conflicts After Installation==
  * If Deploy contains an .ovpn or .conf file, and that file has the same name (without the .extension) as a package's display name, the package's configuration will not be available. It will be suppressed and only the Deploy configuration will be available.
  * If ~/Library/Application Support/Tunnelblick/Configurations contains an .ovpn or .conf file, and that file has the same name (without the .extension) as a package's display name, the .ovpn or .conf configuration will not be available. It will be suppressed and only the package's configuration will be available.

==Comparing Tunnelblick Packages and Deployed Versions of Tunnelblick==
  * Deployed versions may have multiple configurations
  * Each package may have only one configuration

  * Configurations in two Deployed versions may not be combined.
  * Configurations in Deployed versions may optionally be combined with packaged and non-packaged configurations.
  * Configurations in packages are always combined with non-packaged, non-deployed configurations.

  * Deployed versions contain configurations within Tunnelblick.app
  * Packages are copied to ~/Library/Application Support/Tunnelblick/Configurations

  * Deployed versions use "forced-preferences.plist", which may include wildcards, to force any Tunnelblick preference
  * Packages use Info.plist to force preferences for only that configuration

  * The Deploy folder is backed up each time Tunnelblick is launched if contents of Deploy have changed. The Deploy folder is restored from the backup if a Tunnelblick which does not contain the Deploy folder is launched from the same location. This means that once a Deployed version is launched and the backup is created, the launch of a "fresh" copy of Tunnelblick (one without a Deploy folder) from the same location will change that "fresh" version into a Deployed version. This is how the built-in updater can update Tunnelblick without losing the Deploy folder. If the updated "fresh" version of Tunnelblick contains Deploy, that (presumably new) version of Deploy will replace the old version (and then be backed up).
  * No backups of a package are created. However, note that the installation of a package includes copying the package to ~/Library/Application Support/Tunnelblick/Configurations, leaving the original unchanged.

  * Deployed versions ask for a computer administrator username/password only once, on the first launch of Tunnelblick. At that time, all the program itself and all Deployed configurations are secured.
  * Non-deployed versions ask for  a computer administrator username/password on the first launch of Tunnelblick, when a package is installed, and the first time each non-packaged individual configuration is used.

  * Deployed versions of Tunnelblick allow an arbitrary arrangement of configuration files, folders, and subfolders within Deploy.
  * Packages are slightly more structured, requiring exactly one configuration file at a particular 

  * In Deployed versions: key, certificate, script etc. files are referred to in the configuration file relative to /Deploy.
  * In packages: key, certificate, script etc. files are referred to in the configuration file relative to /Resources.

  * Packages contain identifier and version information that may be used to manage updates.
  * Deployed versions do not contain identifier or version information for the contents of Deploy.

====PLEASE DISCUSS THIS PROPOSAL IN [http://groups.google.com/group/tunnelblick-discuss/t/45f208097827043f THIS THREAD] IN THE [http://groups.google.com/group/tunnelblick-discuss TUNNELBLICK DISCUSSION GROUP]====